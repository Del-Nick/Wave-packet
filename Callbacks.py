from aiogram.types import CallbackQuery, InputMediaPhoto
from aiogram.utils.markdown import hide_link
from Database import User
from Keyboards import *
from Pictures import pictures


async def registration_callback(user: User, callback: CallbackQuery):
    if user.status is None:
        match callback.data:
            case 'registration_small_student':
                user.status = 'small_student'
                await callback.message.edit_text(text='–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=None)

            case 'registration_student':
                user.status = 'student'
                await callback.message.edit_text(text='–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=None)

            case 'registration_employee':
                user.status = 'employee'
                await callback.message.edit_text(text='–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=None)

        user.action = 'registration_nickname'
        user.update()


async def delete_user_callback(user: User, callback: CallbackQuery):
    if user.delete_user():
        # await callback.message.edit_text(text='')
        await callback.message.reply_photo(
            photo='AgACAgIAAxkBAAPNZeXw2GcXuEmoKjPHSEC_kXpYbXwAAqLTMRvLwDBLU2CURMzsLTwBAAMCAAN4AAM0BA')

    else:
        await callback.message.edit_text(text='–í—ã —Å–ª–∏—à–∫–æ–º –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã. –ù–µ –º–æ–≥—É –≤—ã–∫–∏–Ω—É—Ç—å –≤–∞—Å –∏–∑ –≥–æ–ª–æ–≤—ã', reply_markup=None)


async def science_groups_callback(user: User, callback: CallbackQuery):
    match callback.data.replace('science_group_', ''):
        case 'start':
            user.action = 'science_group_page_0'
            await callback.message.edit_text(text='–í—ã–±–µ—Ä–∏ –Ω–∞—É—á–Ω—É—é –≥—Ä—É–ø–ø—É\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 4',
                                             reply_markup=science_group_keyboard(user).as_markup())

        case 'page+':
            page = int(user.action[-1]) + 1
            user.action = f'science_group_page_{page}'
            await callback.message.edit_text(text=f'–í—ã–±–µ—Ä–∏ –Ω–∞—É—á–Ω—É—é –≥—Ä—É–ø–ø—É\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} –∏–∑ 4',
                                             reply_markup=science_group_keyboard(user).as_markup())

        case 'page-':
            page = int(user.action[-1]) - 1
            user.action = f'science_group_page_{page}'
            await callback.message.edit_text(text=f'–í—ã–±–µ—Ä–∏ –Ω–∞—É—á–Ω—É—é –≥—Ä—É–ø–ø—É\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} –∏–∑ 4',
                                             reply_markup=science_group_keyboard(user).as_markup())

        case 'üîô  –ù–∞–∑–∞–¥  üîô':
            await callback.message.edit_text(f'–í–∂—É—Ö! –ú—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é',
                                             reply_markup=start_keyboard(user).as_markup())

        case _:
            if 'photonic_and_nonlinear_spectroscopy' in callback.data:
                await photonic_and_nonlinear_spectroscopy(user, callback)

    user.update()


async def photonic_and_nonlinear_spectroscopy(user: User, callback: CallbackQuery):
    match callback.data.replace('science_group_photonic_and_nonlinear_spectroscopy_', ''):
        case 'start':
            user.action = 'science_group_photonic_and_nonlinear_spectroscopy_start'
            await callback.message.edit_text(f'–ì—Ä—É–ø–ø–∞ –≤–µ–¥–µ—Ç –Ω–∞—É—á–Ω—É—é —Ä–∞–±–æ—Ç—É –≤ –æ–±–ª–∞—Å—Ç–∏ –Ω–µ–ª–∏–Ω–µ–π–Ω–æ–π –æ–ø—Ç–∏–∫–∏ –∏ –ª–∞–∑–µ—Ä–Ω–æ–π '
                                             '—Ñ–∏–∑–∏–∫–∏, –Ω–µ–ª–∏–Ω–µ–π–Ω–æ –æ–ø—Ç–∏—á–µ—Å–∫–æ–π –º–∏–∫—Ä–æ—Å–∫–æ–ø–∏–∏ –∏ —Å–ø–µ–∫—Ç—Ä–æ—Å–∫–æ–ø–∏–∏, –≤–æ–ª–æ–∫–æ–Ω–Ω–æ–π '
                                             '–æ–ø—Ç–∏–∫–∏, –±–∏–æ—Ñ–æ—Ç–æ–Ω–∏–∫–∏, –∫–≤–∞–Ω—Ç–æ–≤–æ–π –æ–ø—Ç–∏–∫–∏, —Ñ–∏–∑–∏–∫–∏ —Å–≤–µ—Ä—Ö—Å–∏–ª—å–Ω—ã—Ö —Å–≤–µ—Ç–æ–≤—ã—Ö '
                                             '–ø–æ–ª–µ–π, –≤–∫–ª—é—á–∞—è –≤–æ–ø—Ä–æ—Å—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–µ—Ä—Ö–º–æ—â–Ω—ã—Ö –∏ –ø—Ä–µ–¥–µ–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫–∏—Ö '
                                             '–∏–º–ø—É–ª—å—Å–æ–≤ –∏ –∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ '
                                             '–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–µ—â–µ—Å—Ç–≤–æ–º. –ù–∞—Ä—è–¥—É —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–º–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º–∏ '
                                             '—Ä–∞–±–æ—Ç–∞–º–∏ –≤–µ–¥—É—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —á–∏—Å–ª–µ–Ω–Ω–æ–µ '
                                             f'—Å—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ.{hide_link(pictures["photonic_and_nonlinear_spectroscopy"]["main"])}',
                                             reply_markup=areas_courseworks_contacts_keyboard(user).as_markup())

        case 'areas':
            await callback.message.edit_text('–û–ø—Ç–∏–∫–∞ —Å–≤–µ—Ä—Ö–∫–æ—Ä–æ—Ç–∫–∏—Ö –∏–º–ø—É–ª—å—Å–æ–≤\n\n–ù–∞—É—á–Ω–æ–π –≥—Ä—É–ø–ø–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ '
                                             '—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∏ —Å–æ–∑–¥–∞–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ª–∞–∑–µ—Ä–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Å—É–±—Ç–µ—Ä–∞–≤–∞—Ç—Ç–Ω—ã—Ö '
                                             '—Å–≤–µ—Ä—Ö–∫–æ—Ä–æ—Ç–∫–∏—Ö –∏–º–ø—É–ª—å—Å–æ–≤ —Å—Ä–µ–¥–Ω–µ–≥–æ –∏–Ω—Ñ—Ä–∞–∫—Ä–∞—Å–Ω–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è.',
                                             reply_markup=areas_courseworks_contacts_keyboard(user).as_markup())
            await callback.message.reply_photo(pictures['photonic_and_nonlinear_spectroscopy']['ultra_short_pulse'])